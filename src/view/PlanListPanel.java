/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.DuAnController;
import java.awt.CardLayout;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thisi
 */
public class PlanListPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlanListPanel
     */
    private JPanel mainPanel;
    private CardLayout cl;
    
    DuAnController duAnController;
    public PlanListPanel(JPanel mainPanel, CardLayout cl) {
        initComponents();
        this.mainPanel = mainPanel;
        this.cl = cl;
        duAnController = new DuAnController();
        
        fetchPlanTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        planTable = new javax.swing.JTable();
        plainingButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(840, 560));

        jLabel1.setText("DANH SÁCH KẾ HOẠCH");

        planTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tên dự án", "Ngày bắt đầu", "Ngày kết thúc", "Tên khách hàng", "Số điện thoại", "Số thành viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(planTable);
        if (planTable.getColumnModel().getColumnCount() > 0) {
            planTable.getColumnModel().getColumn(0).setResizable(false);
            planTable.getColumnModel().getColumn(1).setResizable(false);
            planTable.getColumnModel().getColumn(2).setResizable(false);
            planTable.getColumnModel().getColumn(3).setResizable(false);
            planTable.getColumnModel().getColumn(4).setResizable(false);
            planTable.getColumnModel().getColumn(5).setResizable(false);
        }

        plainingButton.setBackground(new java.awt.Color(255, 255, 204));
        plainingButton.setForeground(new java.awt.Color(51, 51, 255));
        plainingButton.setText("Lập kế hoạch");
        plainingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(plainingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(plainingButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void plainingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainingButtonActionPerformed
        // TODO add your handling code here:
        cl.show(mainPanel, PLAINING);
    }//GEN-LAST:event_plainingButtonActionPerformed

    private void fetchPlanTable() {
        List<Map<String, Object>> duAnList = duAnController.getAllDuAnFreelancers();
        DefaultTableModel tableModel = (DefaultTableModel) planTable.getModel();
        tableModel.setRowCount(0);
        for (Map<String, Object> duAn : duAnList) {
            tableModel.addRow(new Object[]{
                duAn.get("tenduan"),
                duAn.get("ngaybatdau"),
                duAn.get("ngayketthuc"),
                duAn.get("tenkhachhang"),
                duAn.get("sodienthoai"),
                duAn.get("sothanhvien")
            });
        }
    }
    
    public void reloadTable() {
        fetchPlanTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton plainingButton;
    private javax.swing.JTable planTable;
    // End of variables declaration//GEN-END:variables
    private String PLAINING = "PLAINING_PANEL";
}
