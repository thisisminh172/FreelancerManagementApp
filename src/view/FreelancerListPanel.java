/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.FreelancerController;
import controller.KyNangController;
import java.awt.CardLayout;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Freelancer;
import model.KyNang;

/**
 *
 * @author thisi
 */
public class FreelancerListPanel extends javax.swing.JPanel {

    /**
     * Creates new form FreelancerListPanel
     */
    private JPanel mainPanel;
    private CardLayout cl;
    private FreelancerController freelancerController;
    private KyNangController kyNangController;

    public FreelancerListPanel(JPanel mainPanel, CardLayout cl) {
        initComponents();
        this.mainPanel = mainPanel;
        this.cl = cl;
        freelancerController = new FreelancerController();
        kyNangController = new KyNangController();
        fetchFreelancerTable();
        formReady(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gioitinhButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        freelancerTable = new javax.swing.JTable();
        addNewFreelancerButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        hotenInput = new javax.swing.JTextField();
        emailInput = new javax.swing.JTextField();
        sodienthoaiInput = new javax.swing.JTextField();
        diachiInput = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        idInput = new javax.swing.JTextField();
        kynangScrollPane = new javax.swing.JScrollPane();
        dobSpinner = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        nuRadio = new javax.swing.JRadioButton();
        namRadio = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(790, 500));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Danh sách");

        freelancerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ tên", "Email", "Số điện thoại", "Kỹ năng", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        freelancerTable.setSelectionBackground(new java.awt.Color(255, 255, 204));
        freelancerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                freelancerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(freelancerTable);
        if (freelancerTable.getColumnModel().getColumnCount() > 0) {
            freelancerTable.getColumnModel().getColumn(0).setResizable(false);
            freelancerTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            freelancerTable.getColumnModel().getColumn(1).setResizable(false);
            freelancerTable.getColumnModel().getColumn(2).setResizable(false);
            freelancerTable.getColumnModel().getColumn(3).setResizable(false);
            freelancerTable.getColumnModel().getColumn(4).setResizable(false);
            freelancerTable.getColumnModel().getColumn(5).setResizable(false);
        }

        addNewFreelancerButton.setText("➕ Thêm mới");
        addNewFreelancerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewFreelancerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addNewFreelancerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addNewFreelancerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Thông tin chi tiết");

        jLabel4.setText("ID");

        jLabel5.setText("Họ tên");

        jLabel6.setText("Email");

        jLabel7.setText("Ngày sinh");

        jLabel8.setText("Số điện thoại");

        jLabel10.setText("Địa chỉ");

        jLabel11.setText("Kỹ năng");

        updateButton.setText("Cập nhật");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 102, 102));
        deleteButton.setText("Xóa");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        idInput.setEditable(false);

        dobSpinner.setModel(new javax.swing.SpinnerDateModel());

        jLabel12.setText("Địa chỉ");

        nuRadio.setText("Nữ");

        namRadio.setText("Nam");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton)
                        .addContainerGap(41, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(emailInput))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sodienthoaiInput))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idInput)
                                    .addComponent(hotenInput)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(dobSpinner))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kynangScrollPane)
                                    .addComponent(diachiInput))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(namRadio)
                        .addGap(18, 18, 18)
                        .addComponent(nuRadio)
                        .addGap(70, 70, 70))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(hotenInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sodienthoaiInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dobSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(nuRadio)
                    .addComponent(namRadio))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(diachiInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(kynangScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(deleteButton))
                .addGap(34, 34, 34))
        );

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("FREELANCER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(
                this, // parent component
                "Bạn có chắc chắn muốn xóa?", // message
                "Xác nhận", // title
                JOptionPane.YES_NO_OPTION
        );

        if (result == JOptionPane.YES_OPTION) {
            String id = idInput.getText();
            if (!id.equals("")) {
                int num = freelancerController.delete(Integer.valueOf(id));
                if (num != 0) {
                    fetchFreelancerTable();
                    clearForm();
                }
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addNewFreelancerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewFreelancerButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Tạo khách hàng mới");
        cl.show(mainPanel, CREATE_NEW_FREELANCER);
    }//GEN-LAST:event_addNewFreelancerButtonActionPerformed

    private void freelancerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_freelancerTableMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        int col = 0; // id column
        String s = source.getModel().getValueAt(row, col) + "";

        formReady(Integer.valueOf(s));
    }//GEN-LAST:event_freelancerTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String id = idInput.getText();
        String hoTen = hotenInput.getText();
        String email = emailInput.getText();
        String soDienThoai = sodienthoaiInput.getText();
        Date dob = (Date) dobSpinner.getValue();
        LocalDate ngaySinh = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String diaChi = diachiInput.getText();
        String gioiTinh = namRadio.isSelected() ? "Nam" : "Nữ";
        if (hoTen.equals("") || email.equals("") || soDienThoai.equals("") || diaChi.equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
            return;
        }
        Freelancer f = new Freelancer();
        f.setId(Integer.valueOf(id));
        f.setHoTen(hoTen);
        f.setEmail(email);
        f.setSoDienThoai(soDienThoai);
        f.setNgaySinh(ngaySinh);
        f.setDiaChi(diaChi);
        f.setGioiTinh(gioiTinh);
        int num = freelancerController.update(f);
        if (num != 0) {
            // update skills
            freelancerController.deleteAllFreelancerKyNangById(f.getId());
            for (Map.Entry<Integer, JCheckBox> entry : checkBoxes.entrySet()) {
                Integer key = entry.getKey();
                JCheckBox cb = entry.getValue();
                if (cb.isSelected()) {
                    freelancerController.insertFreelancerKyNang(f.getId(), key);
                }

            }
            fetchFreelancerTable();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
        }
    }//GEN-LAST:event_updateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewFreelancerButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField diachiInput;
    private javax.swing.JSpinner dobSpinner;
    private javax.swing.JTextField emailInput;
    private javax.swing.JTable freelancerTable;
    private javax.swing.ButtonGroup gioitinhButtonGroup;
    private javax.swing.JTextField hotenInput;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane kynangScrollPane;
    private javax.swing.JRadioButton namRadio;
    private javax.swing.JRadioButton nuRadio;
    private javax.swing.JTextField sodienthoaiInput;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
    private String FREELANCER_LIST = "FREELANCER_LIST_PANEL";
    private String CREATE_NEW_FREELANCER = "CREATE_NEW_FREELANCER_PANEL";
    private String PROJECT_LIST = "PROJECT_LIST_PANEL";
    private String CREATE_NEW_PROJECT = "CREATE_NEW_PROJECT_PANEL";
    private String SKILL_LIST = "SKILL_LIST_PANEL";
    private String CREATE_NEW_SKILL = "CREATE_NEW_SKILL_PANEL";
    private String USER_DETAIL = "USER_DETAIL_PANEL";
    private String EDIT_USER_DETAIL = "EDIT_USER_DETAIL_PANEL";
    private String CUSTOMER_LIST = "CUSTOMER_LIST_PANEL";
    private String CREATE_NEW_CUSTOMER = "CREATE_NEW_CUSTOMER_PANEL";
    private final Map<Integer, JCheckBox> checkBoxes = new LinkedHashMap<>();

    private void addSkillsToScrollPane() {

        JPanel skillsPanel = new JPanel();
        skillsPanel.setLayout(new BoxLayout(skillsPanel, BoxLayout.Y_AXIS));
        List<KyNang> dsKyNang = kyNangController.getAll();
        for (KyNang kyNang : dsKyNang) {
            JCheckBox cb = new JCheckBox(kyNang.getTen());
            checkBoxes.put(kyNang.getId(), cb);
            skillsPanel.add(cb);
        }
        kynangScrollPane.setViewportView(skillsPanel);
    }

    private void formReady(int id) {

        addSkillsToScrollPane();

        gioitinhButtonGroup.add(namRadio);
        gioitinhButtonGroup.add(nuRadio);

        // format spinner
        JSpinner.DateEditor editor = new JSpinner.DateEditor(dobSpinner, "yyyy-MM-dd");
        dobSpinner.setEditor(editor);

        fetchFormData(id);
    }

    public void reloadTable() {
        fetchFreelancerTable();
    }

    private void fetchFreelancerTable() {
        List<Map<String, Object>> list = freelancerController.getAll();
        DefaultTableModel model = (DefaultTableModel) freelancerTable.getModel();
        model.setRowCount(0); // Xóa dữ liệu hiện tại trong bảng
        for (Map<String, Object> f : list) {
            Object[] row = new Object[]{
                f.get("id"),
                f.get("ho_ten"),
                f.get("email"),
                f.get("so_dien_thoai"),
                f.get("dskynang"),
                f.get("trangthai")
            };
            model.addRow(row);
        }
    }

    private void fetchFormData(int id) {
        Freelancer f;
        List<KyNang> freelancerKyNang;
        if (id != 0) {
            f = freelancerController.findById(String.valueOf(id));
            freelancerKyNang = freelancerController.getFreelancerKyNangById(id);

        } else {
            int firstRowId = (int) freelancerTable.getValueAt(0, 0);
            f = freelancerController.findById(String.valueOf(firstRowId));
            freelancerKyNang = freelancerController.getFreelancerKyNangById(firstRowId);
        }

        idInput.setText(String.valueOf(f.getId()));
        hotenInput.setText(f.getHoTen());
        emailInput.setText(f.getEmail());
        sodienthoaiInput.setText(f.getSoDienThoai());

        LocalDate localDate = f.getNgaySinh();
        if (localDate != null) {
            Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
            dobSpinner.setValue(date);
        }

        diachiInput.setText(f.getDiaChi());

        if (f.getGioiTinh().equals("Nam")) {
            namRadio.setSelected(true);
            nuRadio.setSelected(false);
        } else {
            nuRadio.setSelected(true);
            namRadio.setSelected(false);
        }

        for (KyNang kn : freelancerKyNang) {
            JCheckBox cb = checkBoxes.get(kn.getId());
            if (cb != null) {
                cb.setSelected(true);
            }
        }
    }

    private void clearForm() {
        idInput.setText("");
        hotenInput.setText("");
        emailInput.setText("");
        sodienthoaiInput.setText("");
        diachiInput.setText("");
        dobSpinner.setValue(new Date());
        namRadio.setSelected(false);
        nuRadio.setSelected(false);
        for (JCheckBox cb : checkBoxes.values()) {
            cb.setSelected(false);
        }
    }
}
